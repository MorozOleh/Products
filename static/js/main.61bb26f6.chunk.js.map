{"version":3,"sources":["components/Product/Product.jsx","components/Backdrop/Backdrop.jsx","API/api.js","components/Products/Products.jsx","App.js","index.js"],"names":["Product","imageUrl","title","count","size","weight","id","Card","style","width","Img","variant","className","src","Body","Title","Text","height","to","Nav","Link","block","Button","Backdrop","show","onHide","onAdd","useState","setImageUrl","setTitle","setCount","setWidth","setHeight","setWeight","onChangeInputs","event","target","value","name","Modal","aria-labelledby","centered","Header","Form","onSubmit","preventDefault","newProduct","Date","getTime","comments","prev","Group","Label","Control","type","placeholder","onChange","Row","Col","Footer","onClick","fetch","a","axios","get","endpoind","response","data","Products","products","setProduct","visibleProducts","setVisibleProducts","modalShow","setModalShow","useParams","useEffect","then","filter","product","length","CardColumns","map","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61bb26f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Button, Nav} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default function Product({\n  imageUrl,\n  title,\n  count,\n  size,\n  weight,\n  id\n}) {\n\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Img\n        variant=\"top\"\n        className=\"p-2 mb-auto\"\n        src={imageUrl}\n      />\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Card.Text>{count}</Card.Text>\n        <Card.Text>{`size: ${size.width}mm x ${size.height}mm`}</Card.Text>\n        <Card.Text>{`Weight: ${weight} g`}</Card.Text>\n\n        <LinkContainer to={`/${id}`}>\n          <Nav.Link\n            className=\"btn btn-primary mb-2\"\n            size=\"lg\"\n            block=\"true\"\n          >\n            Comments\n          </Nav.Link>\n        </LinkContainer>\n        <Button\n          size=\"lg\"\n          block=\"true\"\n        >\n          Edit\n        </Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nProduct.propTypes = {\n  id: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  size: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }),\n  weight: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n}","import React, { useState } from 'react';\nimport { Modal, Button, Form, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\n\nexport default function Backdrop({ show, onHide, onAdd }) {\n  \n  const [imageUrl, setImageUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [count, setCount] = useState(1);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [weight, setWeight] = useState(0);\n\n  const onChangeInputs = (event) => {\n    const { value, name } = event.target;\n    \n    switch (name) {\n      case 'imageUrl':\n        setImageUrl(value);\n        break;\n      \n        case 'title':\n        setTitle(value);\n        break;\n      \n      case 'count':\n        if (value >= 1) {\n          setCount(value);\n        }\n        break;\n      \n      case 'width':\n        if (value >= 0) {\n          setWidth(value);\n        }\n        break;\n      \n      case 'height':\n        if (value >= 0) {\n          setHeight(value);\n        }\n        break;\n      \n      case 'weight':\n        if (value >= 0) {\n          setWeight(value);\n        }\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  const onSubmitForm = (event) => {\n    event.preventDefault();\n\n    const newProduct = {\n      id: new Date().getTime(),\n      imageUrl,\n      title,\n      count,\n      size: {\n        width,\n        height\n      },\n      weight,\n      comments: []\n    }\n    onAdd(prev => [...prev, newProduct]);\n  } \n\n  return (\n    <Modal\n      show={show}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Add new product\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onSubmitForm}>\n\n          <Form.Group>\n            <Form.Label>imageUrl</Form.Label>\n            <Form.Control\n              type=\"url\"\n              placeholder=\"Enter path to image\"\n              value={imageUrl}\n              name=\"imageUrl\"\n              onChange={onChangeInputs}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter title\"\n              value={title}\n              name=\"title\"\n              onChange={onChangeInputs}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Enter title\"\n              value={count}\n              name=\"count\"\n              onChange={onChangeInputs}\n              />\n          </Form.Group>\n          <Form.Group>\n          <Form.Row>\n            <Col>\n              <Form.Label>Width</Form.Label>\n                <Form.Control\n                  placeholder=\"Enter width\"\n                  type=\"number\"\n                  value={width}\n                  name=\"width\"\n                  onChange={onChangeInputs}\n                />\n            </Col>\n            <Col>\n              <Form.Label>Height</Form.Label>\n                <Form.Control\n                  placeholder=\"Enter height\"\n                  type=\"number\"\n                  value={height}\n                  name=\"height\"\n                  onChange={onChangeInputs}\n                />\n            </Col>\n          </Form.Row>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Weight</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Enter weight\"\n              value={weight}\n              name=\"weight\"\n              onChange={onChangeInputs}\n              />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nBackdrop.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n}","import axios from \"axios\";\n\nconst BASE_URL = 'https://6065edd9b8fbbd0017567bab.mockapi.io';\n\nconst request = endpoind => `${BASE_URL}/${endpoind}`;\n\nexport const fetch = async() => {\n  const response = await axios.get(request('product'));\n  const { data } = response;\n\n  return data;\n}","import React, {useEffect, useState} from 'react';\nimport Product from '../Product'\nimport { CardColumns, Nav } from 'react-bootstrap';\nimport Backdrop from '../Backdrop';\nimport { useParams } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { fetch } from '../../API/api';\n\n\nexport default function Products() {\n  const [products, setProduct] = useState([])\n  const [visibleProducts, setVisibleProducts] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetch().then(setProduct);\n  }, []);\n\n  \n\n  useEffect(() => {\n    if (id) {\n      setVisibleProducts(products.filter(product => product.id === id));\n      return;\n    }\n\n    setVisibleProducts(products)\n  }, [id, products, setVisibleProducts]);\n  \n  return (\n    <>\n      {visibleProducts.length &&\n        <>\n          <CardColumns className=\"m-2\">\n          {visibleProducts.map(product => (\n            <Product\n              key={product.id}\n              imageUrl={product.imageUrl}\n              title={product.name}\n              count={product.count}\n              size={product.size}\n              weight={product.weight}\n              id={product.id}\n            />\n          ))}\n    \n          </CardColumns>\n          { !id &&\n              <div className=\"row justify-content-center\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-lg\"\n                  onClick={() => setModalShow(true)}\n                >\n                  Add one more product\n                </button>\n              </div>\n          }\n\n          <Backdrop\n            show={modalShow}\n            onAdd={setProduct}\n            onHide={() => setModalShow(false)}\n          />\n        </>\n      }\n\n      {id &&\n        <>\n          <ul>\n            {/* { visibleProducts &&\n              visibleProducts[0].comments.map(comment => (\n                <li key={comment}>{comment}</li>\n              ))\n            } */}\n          </ul>\n          <LinkContainer to=\"/\">\n            <Nav.Link\n              className=\"btn btn-primary\"\n              size=\"lg\"\n              block=\"true\"\n            >\n              Main page\n            </Nav.Link>\n          </LinkContainer>\n        </>\n      }\n    </>\n  )\n}\n","import React from 'react';\nimport {Route } from 'react-router-dom';\nimport Products from './components/Products'\nimport './App.scss';\n\n\nexport function App() {\n  return (\n    <Route\n      path=\"/:id?\"\n      component={Products}\n    />\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { App } from './App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}